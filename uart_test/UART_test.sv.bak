/*******************************************************************************
* File: UART_test.sv
* Author: Soham Gandhi
* Date: 2025-04-14
* Description: Hardware test program to ensure UART works on the FPGA.
* Version: 1.0
*******************************************************************************/

module UART_test (
    input   logic        CLOCK_50,
    input   logic [3:0]  KEY,
	
    // For future use
    input   logic [9:0]  SW,
    output  logic [6:0]  HEX5, HEX4, HEX3, HEX2, HEX1, HEX0,
    output  logic [9:0]  LED,

    // VGA signals
    output logic [COLOR_DEPTH-1:0]  VGA_R,
    output logic [COLOR_DEPTH-1:0]  VGA_G,
    output logic [COLOR_DEPTH-1:0]  VGA_B,
    output logic                    VGA_HS,
    output logic                    VGA_VS,
    output logic                    VGA_BLANK_N,
    output logic                    VGA_SYNC_N,
    output logic                    VGA_CLK

    // RX/TX signals
    input   logic        RXD,
    output  logic        TXD,
);
    // This test program will take in the values from the switches send them over UART, and display them on the LEDs.
    assign rst_n = KEY[0]; // Active low reset
    assign clk = CLOCK_50;
    assign data_in_tx = SW[7:0]; // 8-bit data to be sent over UART

    keypress #(
        .clock (clk),
        .reset (rst_n),
        .key_in (KEY[1]),
        .key_out (data_valid)
    );
    
    UART uart_inst (
        .clk(clk),
        .rst_n(rst_n),
        .data_valid(data_valid),
        .data_in_tx(data_in_tx),
        .tx(TXD),
        .rx(RXD),
        .req_data(req_data),
        .data_out_rx(data_out_rx),
        .pending_data_rx(pending_data_rx),
        .parity_error_rx(parity_error_rx)
    );

    always_ff @(posedge clk or negedge rst_n) begin
        if (rst_n) begin
            req_data <= 0;
            LEDs <= 0;
        end
        else begin
            req_data <= 0;
            if (pending_data_rx) begin
                req_data <= 1;
            end if (req_data) begin
                LEDs <= data_out_rx; // Display received data on LEDs
            end
        end
    end
endmodule