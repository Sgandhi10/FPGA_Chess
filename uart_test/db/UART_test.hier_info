|UART_test
CLOCK_50 => clk.IN2
KEY[0] => rst_n.IN2
KEY[1] => KEY[1].IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => data_in_tx[6].IN1
SW[1] => data_in_tx[7].IN1
SW[2] => data_in_tx[8].IN1
SW[3] => data_in_tx[9].IN1
SW[4] => data_in_tx[10].IN1
SW[5] => data_in_tx[11].IN1
SW[6] => data_in_tx[12].IN1
SW[7] => data_in_tx[13].IN1
SW[8] => data_in_tx[14].IN1
SW[9] => data_in_tx[15].IN1
LED[0] <= LED[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= LED[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= LED[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= LED[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[4] <= LED[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[5] <= LED[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[6] <= LED[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[7] <= LED[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[8] <= LED[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[9] <= LED[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RXD => RXD.IN1
TXD <= UART:uart_inst.tx


|UART_test|keypress:k1
clock => key_state~1.DATAIN
reset_n => key_state~3.DATAIN
key_in => Selector0.IN2
key_in => key_next_state.KEY_RELEASED.DATAB
key_in => Selector1.IN1
enable_out <= enable_out.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|UART:uart_inst
clk => clk.IN5
rst_n => rst_n.IN5
data_valid => fifo_tx_push.IN1
data_in_tx[0] => fifo_tx_data_in[0].IN1
data_in_tx[1] => fifo_tx_data_in[1].IN1
data_in_tx[2] => fifo_tx_data_in[2].IN1
data_in_tx[3] => fifo_tx_data_in[3].IN1
data_in_tx[4] => fifo_tx_data_in[4].IN1
data_in_tx[5] => fifo_tx_data_in[5].IN1
data_in_tx[6] => fifo_tx_data_in[6].IN1
data_in_tx[7] => fifo_tx_data_in[7].IN1
data_in_tx[8] => fifo_tx_data_in[8].IN1
data_in_tx[9] => fifo_tx_data_in[9].IN1
data_in_tx[10] => fifo_tx_data_in[10].IN1
data_in_tx[11] => fifo_tx_data_in[11].IN1
data_in_tx[12] => fifo_tx_data_in[12].IN1
data_in_tx[13] => fifo_tx_data_in[13].IN1
data_in_tx[14] => fifo_tx_data_in[14].IN1
data_in_tx[15] => fifo_tx_data_in[15].IN1
tx <= UART_TX:uart_tx.tx
rx => rx.IN1
req_data => fifo_rx_pop.IN1
data_out_rx[0] <= FIFO:fifo_rx.data_out
data_out_rx[1] <= FIFO:fifo_rx.data_out
data_out_rx[2] <= FIFO:fifo_rx.data_out
data_out_rx[3] <= FIFO:fifo_rx.data_out
data_out_rx[4] <= FIFO:fifo_rx.data_out
data_out_rx[5] <= FIFO:fifo_rx.data_out
data_out_rx[6] <= FIFO:fifo_rx.data_out
data_out_rx[7] <= FIFO:fifo_rx.data_out
data_out_rx[8] <= FIFO:fifo_rx.data_out
data_out_rx[9] <= FIFO:fifo_rx.data_out
data_out_rx[10] <= FIFO:fifo_rx.data_out
data_out_rx[11] <= FIFO:fifo_rx.data_out
data_out_rx[12] <= FIFO:fifo_rx.data_out
data_out_rx[13] <= FIFO:fifo_rx.data_out
data_out_rx[14] <= FIFO:fifo_rx.data_out
data_out_rx[15] <= FIFO:fifo_rx.data_out
pending_data_rx <= FIFO:fifo_rx.empty
parity_error_rx <= UART_RX:uart_rx.parity_error


|UART_test|UART:uart_inst|Baud_Tick:baud_gen
clk => baud_tick~reg0.CLK
clk => accumulator[0].CLK
clk => accumulator[1].CLK
clk => accumulator[2].CLK
clk => accumulator[3].CLK
clk => accumulator[4].CLK
clk => accumulator[5].CLK
clk => accumulator[6].CLK
clk => accumulator[7].CLK
clk => accumulator[8].CLK
clk => accumulator[9].CLK
clk => accumulator[10].CLK
clk => accumulator[11].CLK
clk => accumulator[12].CLK
clk => accumulator[13].CLK
clk => accumulator[14].CLK
clk => accumulator[15].CLK
clk => accumulator[16].CLK
clk => accumulator[17].CLK
clk => accumulator[18].CLK
clk => accumulator[19].CLK
clk => accumulator[20].CLK
clk => accumulator[21].CLK
clk => accumulator[22].CLK
clk => accumulator[23].CLK
clk => accumulator[24].CLK
clk => accumulator[25].CLK
clk => accumulator[26].CLK
clk => accumulator[27].CLK
clk => accumulator[28].CLK
clk => accumulator[29].CLK
clk => accumulator[30].CLK
clk => accumulator[31].CLK
rst_n => baud_tick~reg0.ACLR
rst_n => accumulator[0].ACLR
rst_n => accumulator[1].ACLR
rst_n => accumulator[2].ACLR
rst_n => accumulator[3].ACLR
rst_n => accumulator[4].ACLR
rst_n => accumulator[5].ACLR
rst_n => accumulator[6].ACLR
rst_n => accumulator[7].ACLR
rst_n => accumulator[8].ACLR
rst_n => accumulator[9].ACLR
rst_n => accumulator[10].ACLR
rst_n => accumulator[11].ACLR
rst_n => accumulator[12].ACLR
rst_n => accumulator[13].ACLR
rst_n => accumulator[14].ACLR
rst_n => accumulator[15].ACLR
rst_n => accumulator[16].ACLR
rst_n => accumulator[17].ACLR
rst_n => accumulator[18].ACLR
rst_n => accumulator[19].ACLR
rst_n => accumulator[20].ACLR
rst_n => accumulator[21].ACLR
rst_n => accumulator[22].ACLR
rst_n => accumulator[23].ACLR
rst_n => accumulator[24].ACLR
rst_n => accumulator[25].ACLR
rst_n => accumulator[26].ACLR
rst_n => accumulator[27].ACLR
rst_n => accumulator[28].ACLR
rst_n => accumulator[29].ACLR
rst_n => accumulator[30].ACLR
rst_n => accumulator[31].ACLR
baud_tick <= baud_tick~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|UART:uart_inst|FIFO:fifo_tx
clk => data.we_a.CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[15].CLK
clk => data.data_a[14].CLK
clk => data.data_a[13].CLK
clk => data.data_a[12].CLK
clk => data.data_a[11].CLK
clk => data.data_a[10].CLK
clk => data.data_a[9].CLK
clk => data.data_a[8].CLK
clk => data.data_a[7].CLK
clk => data.data_a[6].CLK
clk => data.data_a[5].CLK
clk => data.data_a[4].CLK
clk => data.data_a[3].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
clk => elements[0].CLK
clk => elements[1].CLK
clk => elements[2].CLK
clk => elements[3].CLK
clk => elements[4].CLK
clk => head[0].CLK
clk => head[1].CLK
clk => head[2].CLK
clk => head[3].CLK
clk => head[4].CLK
clk => data.CLK0
rst_n => comb.IN1
rst_n => data_out[0]~reg0.ACLR
rst_n => data_out[1]~reg0.ACLR
rst_n => data_out[2]~reg0.ACLR
rst_n => data_out[3]~reg0.ACLR
rst_n => data_out[4]~reg0.ACLR
rst_n => data_out[5]~reg0.ACLR
rst_n => data_out[6]~reg0.ACLR
rst_n => data_out[7]~reg0.ACLR
rst_n => data_out[8]~reg0.ACLR
rst_n => data_out[9]~reg0.ACLR
rst_n => data_out[10]~reg0.ACLR
rst_n => data_out[11]~reg0.ACLR
rst_n => data_out[12]~reg0.ACLR
rst_n => data_out[13]~reg0.ACLR
rst_n => data_out[14]~reg0.ACLR
rst_n => data_out[15]~reg0.ACLR
rst_n => elements[0].ACLR
rst_n => elements[1].ACLR
rst_n => elements[2].ACLR
rst_n => elements[3].ACLR
rst_n => elements[4].ACLR
rst_n => head[0].ACLR
rst_n => head[1].ACLR
rst_n => head[2].ACLR
rst_n => head[3].ACLR
rst_n => head[4].ACLR
push => always0.IN0
push => always0.IN1
pop => always0.IN1
pop => always0.IN1
data_in[0] => data_out.DATAB
data_in[0] => data.data_a[0].DATAIN
data_in[0] => data.DATAIN
data_in[1] => data_out.DATAB
data_in[1] => data.data_a[1].DATAIN
data_in[1] => data.DATAIN1
data_in[2] => data_out.DATAB
data_in[2] => data.data_a[2].DATAIN
data_in[2] => data.DATAIN2
data_in[3] => data_out.DATAB
data_in[3] => data.data_a[3].DATAIN
data_in[3] => data.DATAIN3
data_in[4] => data_out.DATAB
data_in[4] => data.data_a[4].DATAIN
data_in[4] => data.DATAIN4
data_in[5] => data_out.DATAB
data_in[5] => data.data_a[5].DATAIN
data_in[5] => data.DATAIN5
data_in[6] => data_out.DATAB
data_in[6] => data.data_a[6].DATAIN
data_in[6] => data.DATAIN6
data_in[7] => data_out.DATAB
data_in[7] => data.data_a[7].DATAIN
data_in[7] => data.DATAIN7
data_in[8] => data_out.DATAB
data_in[8] => data.data_a[8].DATAIN
data_in[8] => data.DATAIN8
data_in[9] => data_out.DATAB
data_in[9] => data.data_a[9].DATAIN
data_in[9] => data.DATAIN9
data_in[10] => data_out.DATAB
data_in[10] => data.data_a[10].DATAIN
data_in[10] => data.DATAIN10
data_in[11] => data_out.DATAB
data_in[11] => data.data_a[11].DATAIN
data_in[11] => data.DATAIN11
data_in[12] => data_out.DATAB
data_in[12] => data.data_a[12].DATAIN
data_in[12] => data.DATAIN12
data_in[13] => data_out.DATAB
data_in[13] => data.data_a[13].DATAIN
data_in[13] => data.DATAIN13
data_in[14] => data_out.DATAB
data_in[14] => data.data_a[14].DATAIN
data_in[14] => data.DATAIN14
data_in[15] => data_out.DATAB
data_in[15] => data.data_a[15].DATAIN
data_in[15] => data.DATAIN15
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
full <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|UART:uart_inst|UART_TX:uart_tx
clk => ~NO_FANOUT~
baud_tick => baud_clk.CLK
baud_tick => oversample_count[0].CLK
baud_tick => oversample_count[1].CLK
baud_tick => oversample_count[2].CLK
baud_tick => oversample_count[3].CLK
rst_n => tx_busy~reg0.ACLR
rst_n => tx~reg0.PRESET
rst_n => parity_calc.ACLR
rst_n => bit_index[0].ACLR
rst_n => bit_index[1].ACLR
rst_n => bit_index[2].ACLR
rst_n => bit_index[3].ACLR
rst_n => bit_index[4].ACLR
rst_n => shift_reg[0].ACLR
rst_n => shift_reg[1].ACLR
rst_n => shift_reg[2].ACLR
rst_n => shift_reg[3].ACLR
rst_n => shift_reg[4].ACLR
rst_n => shift_reg[5].ACLR
rst_n => shift_reg[6].ACLR
rst_n => shift_reg[7].ACLR
rst_n => shift_reg[8].ACLR
rst_n => shift_reg[9].ACLR
rst_n => shift_reg[10].ACLR
rst_n => shift_reg[11].ACLR
rst_n => shift_reg[12].ACLR
rst_n => shift_reg[13].ACLR
rst_n => shift_reg[14].ACLR
rst_n => shift_reg[15].ACLR
rst_n => baud_clk.ACLR
rst_n => oversample_count[0].ACLR
rst_n => oversample_count[1].ACLR
rst_n => oversample_count[2].ACLR
rst_n => oversample_count[3].ACLR
rst_n => current_state~8.DATAIN
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => shift_reg.OUTPUTSELECT
start => parity_calc.OUTPUTSELECT
start => bit_index.OUTPUTSELECT
start => bit_index.OUTPUTSELECT
start => bit_index.OUTPUTSELECT
start => bit_index.OUTPUTSELECT
start => bit_index.OUTPUTSELECT
start => current_state.OUTPUTSELECT
start => current_state.OUTPUTSELECT
start => current_state.OUTPUTSELECT
start => current_state.OUTPUTSELECT
start => current_state.OUTPUTSELECT
start => tx_busy~reg0.DATAIN
data_in[0] => WideXnor0.IN0
data_in[0] => shift_reg.DATAB
data_in[1] => WideXnor0.IN1
data_in[1] => shift_reg.DATAB
data_in[2] => WideXnor0.IN2
data_in[2] => shift_reg.DATAB
data_in[3] => WideXnor0.IN3
data_in[3] => shift_reg.DATAB
data_in[4] => WideXnor0.IN4
data_in[4] => shift_reg.DATAB
data_in[5] => WideXnor0.IN5
data_in[5] => shift_reg.DATAB
data_in[6] => WideXnor0.IN6
data_in[6] => shift_reg.DATAB
data_in[7] => WideXnor0.IN7
data_in[7] => shift_reg.DATAB
data_in[8] => WideXnor0.IN8
data_in[8] => shift_reg.DATAB
data_in[9] => WideXnor0.IN9
data_in[9] => shift_reg.DATAB
data_in[10] => WideXnor0.IN10
data_in[10] => shift_reg.DATAB
data_in[11] => WideXnor0.IN11
data_in[11] => shift_reg.DATAB
data_in[12] => WideXnor0.IN12
data_in[12] => shift_reg.DATAB
data_in[13] => WideXnor0.IN13
data_in[13] => shift_reg.DATAB
data_in[14] => WideXnor0.IN14
data_in[14] => shift_reg.DATAB
data_in[15] => WideXnor0.IN15
data_in[15] => shift_reg.DATAB
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|UART:uart_inst|FIFO:fifo_rx
clk => data.we_a.CLK
clk => data.waddr_a[3].CLK
clk => data.waddr_a[2].CLK
clk => data.waddr_a[1].CLK
clk => data.waddr_a[0].CLK
clk => data.data_a[15].CLK
clk => data.data_a[14].CLK
clk => data.data_a[13].CLK
clk => data.data_a[12].CLK
clk => data.data_a[11].CLK
clk => data.data_a[10].CLK
clk => data.data_a[9].CLK
clk => data.data_a[8].CLK
clk => data.data_a[7].CLK
clk => data.data_a[6].CLK
clk => data.data_a[5].CLK
clk => data.data_a[4].CLK
clk => data.data_a[3].CLK
clk => data.data_a[2].CLK
clk => data.data_a[1].CLK
clk => data.data_a[0].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
clk => elements[0].CLK
clk => elements[1].CLK
clk => elements[2].CLK
clk => elements[3].CLK
clk => elements[4].CLK
clk => head[0].CLK
clk => head[1].CLK
clk => head[2].CLK
clk => head[3].CLK
clk => head[4].CLK
clk => data.CLK0
rst_n => comb.IN1
rst_n => data_out[0]~reg0.ACLR
rst_n => data_out[1]~reg0.ACLR
rst_n => data_out[2]~reg0.ACLR
rst_n => data_out[3]~reg0.ACLR
rst_n => data_out[4]~reg0.ACLR
rst_n => data_out[5]~reg0.ACLR
rst_n => data_out[6]~reg0.ACLR
rst_n => data_out[7]~reg0.ACLR
rst_n => data_out[8]~reg0.ACLR
rst_n => data_out[9]~reg0.ACLR
rst_n => data_out[10]~reg0.ACLR
rst_n => data_out[11]~reg0.ACLR
rst_n => data_out[12]~reg0.ACLR
rst_n => data_out[13]~reg0.ACLR
rst_n => data_out[14]~reg0.ACLR
rst_n => data_out[15]~reg0.ACLR
rst_n => elements[0].ACLR
rst_n => elements[1].ACLR
rst_n => elements[2].ACLR
rst_n => elements[3].ACLR
rst_n => elements[4].ACLR
rst_n => head[0].ACLR
rst_n => head[1].ACLR
rst_n => head[2].ACLR
rst_n => head[3].ACLR
rst_n => head[4].ACLR
push => always0.IN0
push => always0.IN1
pop => always0.IN1
pop => always0.IN1
data_in[0] => data_out.DATAB
data_in[0] => data.data_a[0].DATAIN
data_in[0] => data.DATAIN
data_in[1] => data_out.DATAB
data_in[1] => data.data_a[1].DATAIN
data_in[1] => data.DATAIN1
data_in[2] => data_out.DATAB
data_in[2] => data.data_a[2].DATAIN
data_in[2] => data.DATAIN2
data_in[3] => data_out.DATAB
data_in[3] => data.data_a[3].DATAIN
data_in[3] => data.DATAIN3
data_in[4] => data_out.DATAB
data_in[4] => data.data_a[4].DATAIN
data_in[4] => data.DATAIN4
data_in[5] => data_out.DATAB
data_in[5] => data.data_a[5].DATAIN
data_in[5] => data.DATAIN5
data_in[6] => data_out.DATAB
data_in[6] => data.data_a[6].DATAIN
data_in[6] => data.DATAIN6
data_in[7] => data_out.DATAB
data_in[7] => data.data_a[7].DATAIN
data_in[7] => data.DATAIN7
data_in[8] => data_out.DATAB
data_in[8] => data.data_a[8].DATAIN
data_in[8] => data.DATAIN8
data_in[9] => data_out.DATAB
data_in[9] => data.data_a[9].DATAIN
data_in[9] => data.DATAIN9
data_in[10] => data_out.DATAB
data_in[10] => data.data_a[10].DATAIN
data_in[10] => data.DATAIN10
data_in[11] => data_out.DATAB
data_in[11] => data.data_a[11].DATAIN
data_in[11] => data.DATAIN11
data_in[12] => data_out.DATAB
data_in[12] => data.data_a[12].DATAIN
data_in[12] => data.DATAIN12
data_in[13] => data_out.DATAB
data_in[13] => data.data_a[13].DATAIN
data_in[13] => data.DATAIN13
data_in[14] => data_out.DATAB
data_in[14] => data.data_a[14].DATAIN
data_in[14] => data.DATAIN14
data_in[15] => data_out.DATAB
data_in[15] => data.data_a[15].DATAIN
data_in[15] => data.DATAIN15
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
full <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|UART:uart_inst|UART_RX:uart_rx
clk => ~NO_FANOUT~
baud_tick => parity_bit.CLK
baud_tick => shift_reg[0].CLK
baud_tick => shift_reg[1].CLK
baud_tick => shift_reg[2].CLK
baud_tick => shift_reg[3].CLK
baud_tick => shift_reg[4].CLK
baud_tick => shift_reg[5].CLK
baud_tick => shift_reg[6].CLK
baud_tick => shift_reg[7].CLK
baud_tick => shift_reg[8].CLK
baud_tick => shift_reg[9].CLK
baud_tick => shift_reg[10].CLK
baud_tick => shift_reg[11].CLK
baud_tick => shift_reg[12].CLK
baud_tick => shift_reg[13].CLK
baud_tick => shift_reg[14].CLK
baud_tick => shift_reg[15].CLK
baud_tick => bit_index[0].CLK
baud_tick => bit_index[1].CLK
baud_tick => bit_index[2].CLK
baud_tick => bit_index[3].CLK
baud_tick => bit_index[4].CLK
baud_tick => oversample_sum[0].CLK
baud_tick => oversample_sum[1].CLK
baud_tick => oversample_sum[2].CLK
baud_tick => oversample_sum[3].CLK
baud_tick => oversample_sum[4].CLK
baud_tick => oversample_count[0].CLK
baud_tick => oversample_count[1].CLK
baud_tick => oversample_count[2].CLK
baud_tick => oversample_count[3].CLK
baud_tick => oversample_count[4].CLK
baud_tick => oversample_count[5].CLK
baud_tick => current_state~6.DATAIN
rst_n => parity_bit.ACLR
rst_n => shift_reg[0].ACLR
rst_n => shift_reg[1].ACLR
rst_n => shift_reg[2].ACLR
rst_n => shift_reg[3].ACLR
rst_n => shift_reg[4].ACLR
rst_n => shift_reg[5].ACLR
rst_n => shift_reg[6].ACLR
rst_n => shift_reg[7].ACLR
rst_n => shift_reg[8].ACLR
rst_n => shift_reg[9].ACLR
rst_n => shift_reg[10].ACLR
rst_n => shift_reg[11].ACLR
rst_n => shift_reg[12].ACLR
rst_n => shift_reg[13].ACLR
rst_n => shift_reg[14].ACLR
rst_n => shift_reg[15].ACLR
rst_n => bit_index[0].ACLR
rst_n => bit_index[1].ACLR
rst_n => bit_index[2].ACLR
rst_n => bit_index[3].ACLR
rst_n => bit_index[4].ACLR
rst_n => oversample_sum[0].ACLR
rst_n => oversample_sum[1].ACLR
rst_n => oversample_sum[2].ACLR
rst_n => oversample_sum[3].ACLR
rst_n => oversample_sum[4].ACLR
rst_n => oversample_count[0].ACLR
rst_n => oversample_count[1].ACLR
rst_n => oversample_count[2].ACLR
rst_n => oversample_count[3].ACLR
rst_n => oversample_count[4].ACLR
rst_n => oversample_count[5].ACLR
rst_n => current_state~8.DATAIN
rx => Add1.IN5
rx => oversample_count.OUTPUTSELECT
rx => oversample_count.OUTPUTSELECT
rx => oversample_count.OUTPUTSELECT
rx => oversample_count.OUTPUTSELECT
rx => oversample_count.OUTPUTSELECT
rx => oversample_count.OUTPUTSELECT
rx => oversample_sum.OUTPUTSELECT
rx => oversample_sum.OUTPUTSELECT
rx => oversample_sum.OUTPUTSELECT
rx => oversample_sum.OUTPUTSELECT
rx => oversample_sum.OUTPUTSELECT
rx => current_state.OUTPUTSELECT
rx => current_state.OUTPUTSELECT
rx => current_state.OUTPUTSELECT
rx => current_state.OUTPUTSELECT
rx => current_state.OUTPUTSELECT
data_out[0] <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= shift_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= shift_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= shift_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= shift_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= shift_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= shift_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= shift_reg[7].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= shift_reg[8].DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= shift_reg[9].DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= shift_reg[10].DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= shift_reg[11].DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= shift_reg[12].DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= shift_reg[13].DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= shift_reg[14].DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= shift_reg[15].DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid.DB_MAX_OUTPUT_PORT_TYPE
parity_error <= parity_error.DB_MAX_OUTPUT_PORT_TYPE


